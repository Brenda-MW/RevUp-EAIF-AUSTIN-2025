function ObjFcn = hyperparameterstuning(imdsTrain,imdsValidation, imdsTest)
    ObjFcn = @Min_MSE;
    function [Min_MSEv,cons, trainedNet] = Min_MSE(optVars)
    MainBranch1_initial_layer = optVars.MainBranch1_initial_layer;
    MainBranch2_initial_layer = optVars.MainBranch2_initial_layer;
    MainBranch1_second_layer = optVars.MainBranch1_second_layer;
    MainBranch2_second_layer = optVars.MainBranch2_second_layer;
    MainBranch1_third_layer = optVars.MainBranch1_third_layer;
    MainBranch2_third_layer = optVars.MainBranch2_third_layer;
    MainBranch1_fourth_layer = optVars.MainBranch1_fourth_layer;
    MainBranch2_fourth_layer = optVars.MainBranch2_fourth_layer;
    InitialLearningRate = optVars.InitialLearningRate;
    Dropout = optVars.Dropout;
    Input_Size = 3;
    % options for Adam or SGD
    options = trainingOptions("adam", ...
    InitialLearnRate= InitialLearningRate, ...
    LearnRateSchedule="piecewise", ...
    LearnRateDropFactor=0.2, ...
    LearnRateDropPeriod=5, ...
    MaxEpochs=1, ...
    MiniBatchSize=128, ...
    ValidationData= imdsValidation, ...
    ValidationFrequency= 5, ...
    SequenceLength="shortest", ...
    Metrics="rmse", ...
    Verbose=false);
    net = CreateLayers(Input_Size, ...
        MainBranch1_initial_layer, ...
        MainBranch2_initial_layer, ...
        MainBranch1_second_layer, ...
        MainBranch2_second_layer, ...
        MainBranch1_third_layer, ...
        MainBranch2_third_layer, ...
        MainBranch1_fourth_layer,...
        MainBranch2_fourth_layer,...
        Dropout);
    trainedNet = trainnet(imdsTrain{1},imdsTrain{2},net,'mse',options);
    ypred = predict(trainedNet,imdsTest{1});
    Differences = ypred - imdsTest{2};
    squaredDifferences = (Differences).^2;
    Min_MSEv = mean(squaredDifferences)*100;
    cons = [];
    end
end
